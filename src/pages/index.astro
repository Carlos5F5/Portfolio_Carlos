---
import BaseLayout from "../layouts/BaseLayout.astro";
import Navbar from "../components/Navbar";
import About from "../sections/About.astro";
import Projects from "../sections/Projects.astro";
import Contact from "../sections/Contact.astro";

// Generar posiciones aleatorias para nodos y partículas
const nodeCount = 12;
const particleCount = 18;
const connectionsCount = 20;

const nodePositions = Array.from({ length: nodeCount }, () => ({
  x: 10 + Math.random() * 80,
  y: 10 + Math.random() * 80
}));

const particlePositions = Array.from({ length: particleCount }, () => ({
  x: Math.random() * 100,
  y: Math.random() * 100
}));

// Generar conexiones aleatorias entre nodos
const connections = [];
for (let i = 0; i < connectionsCount; i++) {
  const start = nodePositions[Math.floor(Math.random() * nodePositions.length)];
  const end = nodePositions[Math.floor(Math.random() * nodePositions.length)];
  if (start !== end) {
    connections.push({
      x1: start.x,
      y1: start.y,
      x2: end.x,
      y2: end.y,
      id: `conn-${i}`
    });
  }
}
---
<BaseLayout>
  <Navbar client:load />
  
  <!-- Hero Section with Professional Theme -->
  <section id="hero" class="relative min-h-screen flex items-center justify-center overflow-hidden pt-20 lg:pt-24">
    <!-- Professional Background -->
    <div class="absolute inset-0 bg-gradient-to-br from-slate-900 via-slate-800 to-slate-900">
      <div class="absolute inset-0 bg-[radial-gradient(circle_at_30%_20%,rgba(100,116,139,0.1),rgba(0,0,0,0.9)]"></div>
      <!-- Subtle grid pattern -->
      <div class="absolute inset-0 opacity-5">
        <div class="grid grid-cols-20 gap-px h-full w-full">
          {[...Array(400)].map((_, i) => (
            <div class="border border-slate-600/30" style={`animation-delay: ${i * 0.05}s`}></div>
          ))}
        </div>
      </div>
    </div>
    
    <!-- Spider-web particles with connections -->
    <div class="absolute inset-0 pointer-events-none">
      <div class="particle-system">
        <!-- Web nodes - arachnid style -->
        {nodePositions.map((pos, i) => (
          <div 
            class="web-node absolute bg-slate-400/60 rounded-full animate-web-pulse"
            style={`
              left: ${pos.x}%;
              top: ${pos.y}%;
              width: ${0.5 + Math.random() * 0.3}rem;
              height: ${0.5 + Math.random() * 0.3}rem;
              animation-delay: ${i * 0.3}s;
            `}
          ></div>
        ))}
        
        <!-- Floating particles with arachnid effect -->
        {particlePositions.map((pos, i) => (
          <div 
            class="arachnid-particle absolute animate-spider-crawl"
            style={`
              left: ${pos.x}%;
              top: ${pos.y}%;
              animation-delay: ${Math.random() * 5}s;
              animation-duration: ${15 + Math.random() * 10}s;
              --spider-size: ${0.4 + Math.random() * 0.3}rem;
            `}
          >
            <div class="spider-body"></div>
            <div class="spider-leg leg1"></div>
            <div class="spider-leg leg2"></div>
            <div class="spider-leg leg3"></div>
            <div class="spider-leg leg4"></div>
            <div class="spider-leg leg5"></div>
            <div class="spider-leg leg6"></div>
            <div class="spider-leg leg7"></div>
            <div class="spider-leg leg8"></div>
          </div>
        ))}
        
        <!-- Dynamic connections with pulse effect -->
        <svg class="absolute inset-0 w-full h-full" viewBox="0 0 100 100" preserveAspectRatio="none">
          {connections.map((conn) => (
            <line 
              x1={conn.x1} 
              y1={conn.y1} 
              x2={conn.x2} 
              y2={conn.y2} 
              stroke="rgba(148,163,184,0.2)" 
              stroke-width="0.15" 
              class="web-connection"
              style={`animation-delay: ${Math.random() * 2}s`}
            />
          ))}
        </svg>
      </div>
    </div>
    
    <!-- Rick Sanchez Image - Enhanced and Bigger -->
    <div class="absolute bottom-8 left-8 opacity-80 hover:opacity-100 transition-all duration-500 group z-20">
      <div class="relative">
        <!-- Spider legs effect - more prominent -->
        <div class="absolute inset-0">
          {[...Array(8)].map((_, i) => (
            <div 
              class="absolute w-16 lg:w-24 h-0.5 bg-gradient-to-r from-blue-400/50 to-purple-400/30 rounded-full transform origin-left"
              style={`
                transform: rotate(${i * 45}deg);
                top: 50%;
                left: 50%;
                margin-top: -0.1rem;
                animation: leg-pulse ${3 + Math.random() * 2}s ease-in-out infinite;
                animation-delay: ${i * 0.2}s;
              `}
            ></div>
          ))}
        </div>
        
        <!-- Enhanced image container -->
        <div class="relative bg-slate-800/40 backdrop-blur-sm rounded-full p-2 lg:p-3 border border-slate-600/60 group-hover:border-blue-400/80 transition-all duration-500 transform group-hover:rotate-3 shadow-2xl">
          <div class="relative overflow-hidden rounded-full border-2 border-transparent group-hover:border-blue-400/50">
            <img 
              src="/icons/ricksanchez.png" 
              alt="Rick Sanchez" 
              class="w-24 h-24 lg:w-32 lg:h-32 xl:w-40 xl:h-40 object-contain filter brightness-110 contrast-110 saturate-110 group-hover:brightness-125 group-hover:contrast-125 group-hover:saturate-125 transition-all duration-500 transform group-hover:scale-105"
            />
            <!-- Glowing effect overlay -->
            <div class="absolute inset-0 bg-blue-400/10 rounded-full group-hover:bg-blue-400/20 transition-all duration-500"></div>
          </div>
        </div>
        
        <!-- Multiple animated rings -->
        <div class="absolute inset-0 rounded-full border-2 border-blue-500/20 animate-ping-slow opacity-40 group-hover:opacity-70"></div>
        <div class="absolute inset-0 rounded-full border-2 border-purple-500/20 animate-ping-slow opacity-30 group-hover:opacity-60" style="animation-delay: 1s;"></div>
      </div>
    </div>
    
    <!-- Hero Content -->
    <div class="relative z-10 text-center px-4 max-w-5xl mx-auto">
      <!-- Terminal with Hacker Typing Animation -->
      <div class="mb-8 lg:mb-12 text-left max-w-2xl mx-auto">
        <div class="bg-slate-900/95 backdrop-blur-sm rounded-xl border border-slate-700/60 p-4 lg:p-8 font-mono text-xs lg:text-sm shadow-2xl">
          <div class="flex items-center mb-4 lg:mb-6">
            <div class="flex space-x-2">
              <div class="w-2 h-2 lg:w-3 lg:h-3 bg-red-400 rounded-full animate-pulse"></div>
              <div class="w-2 h-2 lg:w-3 lg:h-3 bg-yellow-400 rounded-full animate-pulse" style="animation-delay: 0.5s;"></div>
              <div class="w-2 h-2 lg:w-3 lg:h-3 bg-green-400 rounded-full animate-pulse" style="animation-delay: 1s;"></div>
            </div>
            <span class="ml-2 lg:ml-4 text-slate-400">carlos@haxor:~$</span>
          </div>
          <div class="space-y-2 lg:space-y-4 terminal-content">
            <!-- Command 1 -->
            <div class="command-block">
              <div class="command-input">
                <span class="text-slate-400">carlos@haxor:~$ </span>
                <span class="text-blue-400 typewriter" data-text="whoami" data-delay="500"></span>
              </div>
              <div class="command-output opacity-0" data-show-delay="2000">
                <span class="text-white">Carlos Franco</span>
              </div>
            </div>
            
            <!-- Command 2 -->
            <div class="command-block">
              <div class="command-input">
                <span class="text-slate-400">carlos@haxor:~$ </span>
                <span class="text-blue-400 typewriter" data-text="cat specialization.txt" data-delay="3000"></span>
              </div>
              <div class="command-output opacity-0" data-show-delay="5500">
                <span class="text-white">Fullstack Developer | Cybersecurity Specialist</span>
              </div>
            </div>
            
            <!-- Command 3 -->
            <div class="command-block">
              <div class="command-input">
                <span class="text-slate-400">carlos@haxor:~$ </span>
                <span class="text-blue-400 typewriter" data-text="ls -la skills/" data-delay="6500"></span>
              </div>
              <div class="command-output opacity-0" data-show-delay="8500">
                <span class="text-emerald-400">React • Node.js • Python • Security • Hacking • Pentesting • Processing Malware Dev</span>
              </div>
            </div>
            
            <!-- Command 4 -->
            <div class="command-block">
              <div class="command-input">
                <span class="text-slate-400">carlos@haxor:~$ </span>
                <span class="text-blue-400 typewriter" data-text="./init_portfolio.sh" data-delay="9500"></span>
              </div>
              <div class="command-output opacity-0" data-show-delay="11500">
                <span class="text-green-400">✓ Portfolio initialized successfully</span>
              </div>
            </div>
            
            <!-- Final prompt -->
            <div class="opacity-0 final-prompt" data-show-delay="12500">
              <span class="text-slate-400">carlos@haxor:~$</span>
              <span class="animate-pulse text-green-400">█</span>
            </div>
          </div>
        </div>
      </div>
      
      <!-- Professional main heading -->
      <h1 class="text-4xl lg:text-5xl xl:text-7xl font-bold mb-6 lg:mb-8 relative opacity-0 main-title" data-show-delay="13000">
        <span class="text-white professional-text">Carlos Franco</span>
        <div class="absolute -bottom-2 left-1/2 transform -translate-x-1/2 w-24 lg:w-32 h-1 bg-gradient-to-r from-blue-600 to-purple-600 rounded-full"></div>
      </h1>
      
      <!-- Professional subtitle -->
      <p class="text-base lg:text-xl xl:text-2xl mb-8 lg:mb-12 text-slate-300 max-w-3xl mx-auto leading-relaxed opacity-0 subtitle" data-show-delay="13500">
        Hola, que gusto tenerte aquí, espero que te sea de agrado mi portafolio, en resumen, he sido un desarrollado Fullstack, pero lo que mas me gusta es la seguridad informática, he trabajado en proyectos de desarrollo y ciberseguridad, y siempre estoy aprendiendo nuevas tecnologías para mejorar mis habilidades. A HACKEAR !
      </p>
      
      <!-- Professional CTA Buttons -->
      <div class="flex flex-col sm:flex-row gap-4 lg:gap-6 justify-center items-center opacity-0 cta-buttons" data-show-delay="14000">
        <a 
          href="https://drive.google.com/file/d/1OCsoEWEJmrkDBB94wmbv5FFhlk20AqfE/view?usp=sharing" 
          class="group relative px-6 lg:px-8 py-3 lg:py-4 bg-gradient-to-r from-blue-600 to-purple-600 text-white rounded-lg font-semibold hover:from-blue-700 hover:to-purple-700 transition-all duration-300 shadow-lg hover:shadow-xl transform hover:-translate-y-1 text-sm lg:text-base"
          target="_blank"
        >
          <span class="relative z-10 flex items-center gap-2">
            <svg class="w-4 h-4 lg:w-5 lg:h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"/>
            </svg>
            Ver CV
          </span>
        </a>
        
        <a 
          href="#projects" 
          class="group px-6 lg:px-8 py-3 lg:py-4 border-2 border-slate-600 text-slate-300 rounded-lg font-semibold hover:bg-slate-800 hover:border-slate-500 transition-all duration-300 shadow-lg hover:shadow-xl transform hover:-translate-y-1 text-sm lg:text-base"
        >
          <span class="flex items-center gap-2">
            <svg class="w-4 h-4 lg:w-5 lg:h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012 2v2M7 7h10"/>
            </svg>
            Ver Proyectos
          </span>
        </a>
      </div>
      
      <!-- Professional stats -->
      <div class="mt-12 lg:mt-16 grid grid-cols-1 md:grid-cols-3 gap-6 lg:gap-8 max-w-3xl mx-auto opacity-0 stats" data-show-delay="14500">
        <div class="text-center">
          <div class="text-2xl lg:text-3xl font-bold text-white mb-2">2+</div>
          <div class="text-slate-400 text-sm lg:text-base">Años de Experiencia</div>
        </div>
        <div class="text-center">
          <div class="text-2xl lg:text-3xl font-bold text-white mb-2">20+</div>
          <div class="text-slate-400 text-sm lg:text-base">Proyectos Completados</div>
        </div>
        <div class="text-center">
          <div class="text-2xl lg:text-3xl font-bold text-white mb-2">100%</div>
          <div class="text-slate-400 text-sm lg:text-base">Código Seguro</div>
        </div>
      </div>
    </div>
  </section>
  
  <About />
  <Projects />
  <Contact />
</BaseLayout>

<style>
  /* Typewriter Animation */
  .typewriter {
    display: inline-block;
    border-right: 2px solid #3b82f6;
    white-space: nowrap;
    animation: blink-cursor 1s infinite;
  }
  
  @keyframes blink-cursor {
    0%, 50% { border-color: #3b82f6; }
    51%, 100% { border-color: transparent; }
  }
  
  @keyframes type {
    from { width: 0; }
    to { width: 100%; }
  }
  
  /* Fade in animations */
  .fade-in {
    animation: fadeIn 0.5s ease-in-out forwards;
  }
  
  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
  }
  
  /* Enhanced spider animations */
  @keyframes spider-crawl {
    0% { 
      transform: translate(0, 0) rotate(0deg); 
      opacity: 0.4; 
    }
    25% { 
      transform: translate(calc(100px * var(--dir-x)), calc(-50px * var(--dir-y))) rotate(90deg); 
      opacity: 0.7; 
    }
    50% { 
      transform: translate(calc(50px * var(--dir-x)), calc(-100px * var(--dir-y))) rotate(180deg); 
      opacity: 1; 
    }
    75% { 
      transform: translate(calc(-50px * var(--dir-x)), calc(-150px * var(--dir-y))) rotate(270deg); 
      opacity: 0.7; 
    }
    100% { 
      transform: translate(calc(-100px * var(--dir-x)), calc(-200px * var(--dir-y))) rotate(360deg); 
      opacity: 0.4; 
    }
  }
  
  @keyframes leg-pulse {
    0%, 100% { 
      transform: rotate(calc(var(--rot) * 1deg)) scale(0.8); 
      opacity: 0.3;
    }
    50% { 
      transform: rotate(calc(var(--rot) * 1deg)) scale(1.2); 
      opacity: 0.8;
    }
  }
  
  @keyframes connection-pulse {
    0%, 100% { 
      stroke-opacity: 0.1; 
      stroke-width: 0.1; 
    }
    50% { 
      stroke-opacity: 0.4; 
      stroke-width: 0.3; 
    }
  }
  
  /* Arachnid particle styling */
  .arachnid-particle {
    width: var(--spider-size);
    height: var(--spider-size);
    --dir-x: ${Math.random() > 0.5 ? 1 : -1};
    --dir-y: ${Math.random() > 0.5 ? 1 : -1};
  }
  
  .spider-body {
    position: absolute;
    width: 60%;
    height: 60%;
    top: 20%;
    left: 20%;
    background: rgba(66, 153, 225, 0.8);
    border-radius: 50%;
    z-index: 2;
  }
  
  .spider-leg {
    position: absolute;
    background: rgba(148, 163, 184, 0.7);
    border-radius: 2px;
    transform-origin: center center;
  }
  
  .leg1 { top: 30%; left: 50%; width: 70%; height: 8%; transform: rotate(20deg); }
  .leg2 { top: 30%; left: 50%; width: 70%; height: 8%; transform: rotate(-20deg); }
  .leg3 { top: 40%; left: 50%; width: 90%; height: 8%; transform: rotate(30deg); }
  .leg4 { top: 40%; left: 50%; width: 90%; height: 8%; transform: rotate(-30deg); }
  .leg5 { top: 50%; left: 50%; width: 90%; height: 8%; transform: rotate(40deg); }
  .leg6 { top: 50%; left: 50%; width: 90%; height: 8%; transform: rotate(-40deg); }
  .leg7 { top: 60%; left: 50%; width: 70%; height: 8%; transform: rotate(50deg); }
  .leg8 { top: 60%; left: 50%; width: 70%; height: 8%; transform: rotate(-50deg); }
  
  .web-connection {
    animation: connection-pulse 3s ease-in-out infinite;
    stroke-dasharray: 4;
  }
  
  /* Other animations */
  @keyframes float-professional {
    0%, 100% { 
      transform: translateY(0px) translateX(0px); 
      opacity: 0.4;
    }
    25% { 
      transform: translateY(-15px) translateX(10px); 
      opacity: 0.6;
    }
    50% { 
      transform: translateY(-30px) translateX(-5px); 
      opacity: 0.8;
    }
    75% { 
      transform: translateY(-20px) translateX(-10px); 
      opacity: 0.6;
    }
  }
  
  @keyframes web-pulse {
    0%, 100% { 
      transform: scale(1); 
      opacity: 0.3; 
    }
    50% { 
      transform: scale(1.5); 
      opacity: 0.7; 
    }
  }
  
  @keyframes ping-slow {
    0% {
      transform: scale(1);
      opacity: 0.4;
    }
    50% {
      transform: scale(1.1);
      opacity: 0.1;
    }
    100% {
      transform: scale(1.2);
      opacity: 0;
    }
  }
  
  .web-node {
    animation: web-pulse 2s ease-in-out infinite;
  }
  
  .animate-ping-slow {
    animation: ping-slow 3s cubic-bezier(0, 0, 0.2, 1) infinite;
  }
  
  .professional-text {
    background: linear-gradient(135deg, #ffffff, #e2e8f0);
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    text-shadow: 0 0 30px rgba(255, 255, 255, 0.1);
  }
  
  /* Responsive adjustments */
  @media (max-width: 768px) {
    .arachnid-particle {
      --spider-size: 1rem;
    }
    
    .absolute.bottom-8.left-8 {
      bottom: 1rem;
      left: 1rem;
    }
    
    .absolute.bottom-8.left-8 .w-16 {
      width: 3rem;
    }
  }
  
  @media (max-width: 640px) {
    .arachnid-particle {
      --spider-size: 0.8rem;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Typewriter effect
    function typeWriter(element, text, speed = 100) {
      let i = 0;
      element.textContent = '';
      element.style.borderRight = '2px solid #3b82f6';
      
      function type() {
        if (i < text.length) {
          element.textContent += text.charAt(i);
          i++;
          setTimeout(type, speed + Math.random() * 50);
        } else {
          // Remove cursor after typing
          setTimeout(() => {
            element.style.borderRight = 'none';
          }, 500);
        }
      }
      type();
    }
    
    // Start animations
    const typewriterElements = document.querySelectorAll('.typewriter');
    
    typewriterElements.forEach(element => {
      const text = element.getAttribute('data-text') || '';
      const delay = parseInt(element.getAttribute('data-delay') || '0');
      
      setTimeout(() => {
        typeWriter(element, text);
      }, delay);
    });
    
    // Show command outputs
    const outputs = document.querySelectorAll('.command-output');
    outputs.forEach(output => {
      const delay = parseInt(output.getAttribute('data-show-delay') || '0');
      setTimeout(() => {
        output.classList.remove('opacity-0');
        output.classList.add('fade-in');
      }, delay);
    });
    
    // Show other elements
    const elements = document.querySelectorAll('.final-prompt, .main-title, .subtitle, .cta-buttons, .stats');
    elements.forEach(element => {
      const delay = parseInt(element.getAttribute('data-show-delay') || '0');
      setTimeout(() => {
        element.classList.remove('opacity-0');
        element.classList.add('fade-in');
      }, delay);
    });
  });
</script>